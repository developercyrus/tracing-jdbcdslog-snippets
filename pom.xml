<project 
        xmlns="http://maven.apache.org/POM/4.0.0" 
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    
    <!-- 
        Remarks:
        1.  setup involves 2 parts:
            a. setup logging proxy
            b. setup logging engine (which uses slf4j (abstraction only), we use log4j as implmentation, and in turn log4j.properties is required)
        2.  example1 setups logging proxy by wrapping JDBC Connection, using org.jdbcdslog.ConnectionLoggingProxy 
        3.  example2 setups logging proxy by proxing JDBC Driver, using org.jdbcdslog.DriverLoggingProxy, which even username / password of the connection can be logged.
        4.  example3 setups logging proxy by proxing JDBC DataSource, using org.jdbcdslog.XADataSourceProxy, which even username / password of the connection can be logged. 
        
        
        Environment:
        1.  Windows 7 64 bit (assume OS installed in C:\Windows)
        2.  Eclipse 4.4
        3.  JDK 8.0
        4.  zwamp-1.1.2 (mysql)   //to do: launch it wih antrun-maven-plugin
        
       
        Approach1 - all automate
        1.  "mvn install". This will include 
            a. initialize database
            b. inside integration test, @before, setup log4j
            c. inside integration test, @test, run some sql
            d. expect to see there's log4j.log in target\test-classes\tracing\jdbcdslog\example[x]\log4j.log
        2.  this project includes integration test 
        3.  with maven-failsafe-plugin, any java file name with "IT" will be treated as 
            intergration test (by maven, the phase is integration-test). 
        4.  the integration test report can be found in \target\failsafe-reports
       
    -->
        
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>  
    </properties>
    
    
    <modelVersion>4.0.0</modelVersion>
    <groupId>jdbcdslog-snippets</groupId>
    <artifactId>jdbcdslog-snippets</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>
    
    
    <build>   
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>   
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.codehaus.mojo</groupId>
                                        <artifactId>sql-maven-plugin</artifactId>
                                        <versionRange>[1.5,)</versionRange>
                                        <goals>
                                            <goal>execute</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    
                                    <action>
                                        <execute>  
                                            <runOnIncremental>false</runOnIncremental>  
                                        </execute>  
                                    </action>
                                </pluginExecution>
                                                                                                                                                  
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>


        <plugins>   
        
         <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>sql-maven-plugin</artifactId>
                <version>1.5</version>
                <dependencies>
                    <dependency>
                        <groupId>mysql</groupId>
                        <artifactId>mysql-connector-java</artifactId>
                        <version>5.1.9</version>
                    </dependency>
                </dependencies>
                
                <executions>
                    <execution>
                        <id>drop-db-before-test-if-any (mysql)</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <driver>com.mysql.jdbc.Driver</driver>
                            <url>jdbc:mysql://localhost:3306</url>
                            <username>root</username>
                            <password></password>
                            <settingsKey>sensibleKey</settingsKey>
                            <skip>${maven.test.skip}</skip>
                            <autocommit>true</autocommit>
                            <sqlCommand>                                                                
                                drop database if exists tracing_jdbcdslog_example1;
                                drop database if exists tracing_jdbcdslog_example2;
                                drop database if exists tracing_jdbcdslog_example3;                                                                        
                            </sqlCommand>
                            <onError>continue</onError>
                        </configuration>
                    </execution>
                    

                    <execution>
                        <id>create-db (mysql)</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <driver>com.mysql.jdbc.Driver</driver>
                            <url>jdbc:mysql://localhost:3306</url>
                            <username>root</username>
                            <password></password>
                            <settingsKey>sensibleKey</settingsKey>
                            <skip>${maven.test.skip}</skip>
                            <autocommit>true</autocommit>
                            <sqlCommand>                                                                        
                                create database if not exists tracing_jdbcdslog_example1;
                                create database if not exists tracing_jdbcdslog_example2;
                                create database if not exists tracing_jdbcdslog_example3;                                                                    
                            </sqlCommand>
                        </configuration>
                    </execution>
                    
                    <execution>
                        <id>create-schema (mysql)</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <driver>com.mysql.jdbc.Driver</driver>
                            <url>jdbc:mysql://localhost:3306</url>
                            <username>root</username>
                            <password></password>
                            <settingsKey>sensibleKey</settingsKey>
                            <skip>${maven.test.skip}</skip>
                            <autocommit>true</autocommit>
                            <srcFiles>
                                <srcFile>src/main/resources/tracing/jdbcdslog/example3/create-schema.sql</srcFile>
                            </srcFiles>
                        </configuration>
                    </execution>
                                       
                </executions>
            </plugin>
             
        
            <!-- compile -->                  
            <plugin>                                   
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.0</version>
                <configuration>
                    <source>1.7</source>     <!-- jdbcdslog no specific, but javax requires 7.0 -->
                    <target>1.7</target>
                </configuration>                         
            </plugin>  
            
         
            <!-- integration-test -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.12</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
                   
        </plugins>    
    </build>     
        

    <dependencies>
           
        <!-- junit -->                
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.10</version>
            <type>jar</type>
            <scope>compile</scope>
        </dependency>
        
        
        <!-- jdbcdslog -->
        <dependency>
            <groupId>com.github.usc</groupId>
            <artifactId>jdbcdslog</artifactId>
            <version>1.0.6</version>
        </dependency>
        
        
        <!-- 
            jdbcdslog logging engine implementation 
            https://code.google.com/p/jdbcdslog/wiki/UserGuide#Setup_logging_engine                    
        -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.12</version>
        </dependency>
                
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.7.12</version>
        </dependency>


        <!--  atomikos - jta implementation --> 
        <dependency>
            <groupId>com.atomikos</groupId>
            <artifactId>transactions-jta</artifactId>
            <version>3.9.3</version>
        </dependency>
        

        <dependency>
            <groupId>com.atomikos</groupId>
            <artifactId>transactions-jdbc</artifactId>
            <version>3.9.3</version>
        </dependency>
        
        
        <!-- for customized Reflections -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.0</version>
        </dependency>
                
                
                
        <!-- mysql -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.9</version>
        </dependency>
                
        
         <!-- javax -->
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-api</artifactId>
            <!-- 
                1.  wihout scope = provided, it hits javax/transaction/SystemException
                        test1(javaee.jta.atkmikos.example1.ClientIT): Absent Code attribute in method that is not native or abstract in class file javax/transaction/SystemException
                2.  fix it 
                        a) by adding scope, 
                                https://aishwaryavaishno.wordpress.com/tag/javaxtransactionsystemexception/
                        b) by switch from 6.0 to 7.0, although the quote reference is from 6.0 to 6.0-5, 
                                http://stackoverflow.com/questions/15386950/classformaterror-absent-code-attribute-in-method-that-is-not-native-or-abstract 
             -->
            <version>7.0</version>            
            <scope>provided</scope>
        </dependency>
        
    </dependencies>             
</project>